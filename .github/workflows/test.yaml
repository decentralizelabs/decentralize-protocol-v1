name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  solana_version: 1.10.39
  rust_toolchain: 1.65

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v2
        name: Cache Cargo registry + index
        id: cache-cargo
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/cache@v2
        name: Cache elusiv target
        with:
          path: elusiv/target
          key: ${{ runner.os }}-elusiv-target-${{ hashFiles('elusiv/Cargo.lock') }}

      - uses: actions/cache@v2
        name: Cache elusiv-warden-network target
        with:
          path: elusiv-warden-network/target
          key: ${{ runner.os }}-elusiv-warden-network-target-${{ hashFiles('elusiv-warden-network/Cargo.lock') }}

      - uses: actions/cache@v2
        name: Cache Solana Tool Suite
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.solana_version }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.rust_toolchain }}
          override: true

      - name: install essential
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
          rustup component add rustfmt

      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.solana_version }}/install)"
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

#      - name: Run unit tests for codecoverage
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV }}
#        run: |
#          cargo install cargo-tarpaulin --force
#          sh ./build.sh test --test-kind tarpaulin --target elusiv
#          bash <(curl -s https://codecov.io/bash) -X gcov -t $CODECOV_TOKEN

      - name: Run unit- and integration-tests with BPF
        run: |
          set -eu
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
          rustup component add rustfmt
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          sh ./build.sh test --test-kind unit --target elusiv
          sh ./build.sh test --test-kind integration --target elusiv
          sh ./build.sh test --test-kind unit --target elusiv-warden-network
          sh ./build.sh test --test-kind integration --target elusiv-warden-network
